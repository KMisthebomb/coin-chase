	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_setup
_setup:
	ld	iy, -851900
	ld	hl, (iy)
	ld	a, (iy + 3)
	push	hl
	call	_srand
	pop	hl
	ld	hl, -917456
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld.sis	bc, -2
	call	__sand
	ld	iy, -917456
	ld	(iy), l
	ld	(iy + 1), h
	lea	bc, iy + 0
	ld	hl, 1966080
	ld	de, -917504
	push	de
	pop	iy
	ld	(iy), hl
	xor	a, a
	ld	(iy + 3), a
	push	bc
	pop	iy
	ld	l, (iy)
	ld	h, (iy + 1)
	ld.sis	bc, -520
	call	__sand
	ld.sis	de, 7
	add.sis	hl, de
	ld	(iy), l
	ld	(iy + 1), h
	ld.sis	hl, 160
	ld	iy, _player
	ld	(iy), l
	ld	(iy + 1), h
	ld	a, 120
	ld	(_player+2), a
	xor	a, a
	ld	(_player+4), a
	ld	a, 1
	ld	(_player+3), a
	call	_random
	ld	bc, 305
	call	__iremu
	ld	iy, _COIN
	ld	(iy), l
	ld	(iy + 1), h
	call	_random
	ld	bc, 215
	call	__iremu
	ld	a, l
	add	a, 10
	ld	(_COIN+2), a
	call	_gfx_Begin
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 26
	push	hl
	ld	hl, _mypalette
	push	hl
	call	_gfx_SetPalette
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTransparentColor
	pop	hl
	ld	hl, 8
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	hl, 2
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, 8
	push	hl
	call	_gfx_SetTextBGColor
	pop	hl
	ld	hl, 1
	push	hl
	call	_gfx_SetColor
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_scanKeys
_scanKeys:
	call	_kb_Scan
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld.sis	bc, 255
	call	__sand
	ld	e, l
	ld	d, h
	ld	a, e
	bit	3, a
	jq	z, BB1_2
	ld	l, 3
	ld	a, (_player+2)
	add	a, -2
	ld	(_player+2), a
	ld	a, l
	ld	(_player+3), a
BB1_2:
	ld.sis	bc, 1
	ld	l, e
	ld	h, d
	call	__sand
	ld	a, l
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB1_4
	ld	l, 4
	ld	a, (_player+2)
	add	a, 2
	ld	(_player+2), a
	ld	a, l
	ld	(_player+3), a
BB1_4:
	ld	iy, _player
	ld	a, e
	bit	1, a
	jq	z, BB1_6
	ld	a, 2
	ld.sis	bc, -2
	ld	l, (iy)
	ld	h, (iy + 1)
	add.sis	hl, bc
	ld	(iy), l
	ld	(iy + 1), h
	ld	(_player+3), a
BB1_6:
	ld	a, e
	bit	2, a
	jq	z, BB1_8
	ld.sis	de, 2
	ld	l, (iy)
	ld	h, (iy + 1)
	add.sis	hl, de
	ld	(iy), l
	ld	(iy + 1), h
	ld	a, 1
	ld	(_player+3), a
BB1_8:
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_calculateDistance
_calculateDistance:
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_drawSprites
_drawSprites:
	ld	hl, 8
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	a, (_player+3)
	cp	a, 1
	jq	nz, BB3_2
	ld	iy, _playerR_data
	ld	hl, _player
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	bc, 0
	push	bc
	pop	hl
	ld	l, e
	ld	h, d
	ld	a, (_player+2)
	ld	c, a
	push	bc
	push	hl
	push	iy
	call	_gfx_TransparentSprite
	pop	hl
	pop	hl
	pop	hl
	ld	a, (_player+3)
BB3_2:
	cp	a, 2
	jq	nz, BB3_4
	ld	iy, _playerL_data
	ld	hl, _player
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	bc, 0
	push	bc
	pop	hl
	ld	l, e
	ld	h, d
	ld	a, (_player+2)
	ld	c, a
	push	bc
	push	hl
	push	iy
	call	_gfx_TransparentSprite
	pop	hl
	pop	hl
	pop	hl
	ld	a, (_player+3)
BB3_4:
	cp	a, 3
	jq	nz, BB3_6
	ld	iy, _playerU_data
	ld	hl, _player
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	bc, 0
	push	bc
	pop	hl
	ld	l, e
	ld	h, d
	ld	a, (_player+2)
	ld	c, a
	push	bc
	push	hl
	push	iy
	call	_gfx_TransparentSprite
	pop	hl
	pop	hl
	pop	hl
	ld	a, (_player+3)
BB3_6:
	ld	hl, _COIN
	ld	iy, _coin_data
	cp	a, 4
	jq	nz, BB3_8
	ld	iy, _playerD_data
	ld	hl, _player
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	bc, 0
	push	bc
	pop	hl
	ld	l, e
	ld	h, d
	ld	a, (_player+2)
	ld	c, a
	push	bc
	push	hl
	push	iy
	call	_gfx_TransparentSprite
	ld	iy, _coin_data
	pop	hl
	pop	hl
	pop	hl
	ld	hl, _COIN
BB3_8:
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	de, 0
	push	de
	pop	bc
	ld	c, l
	ld	b, h
	ld	a, (_COIN+2)
	ld	e, a
	push	de
	push	bc
	push	iy
	call	_gfx_TransparentSprite
	pop	hl
	pop	hl
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_drawStatusBar
_drawStatusBar:
	ld	hl, 1
	push	hl
	push	hl
	call	_gfx_SetTextScale
	pop	hl
	pop	hl
	ld	hl, 1
	push	hl
	push	hl
	ld	hl, L_.str
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 1
	push	hl
	ld	hl, 44
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	a, (_player+4)
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	de, 3
	push	de
	push	hl
	call	_gfx_PrintInt
	pop	hl
	pop	hl
	ld	hl, 1
	push	hl
	ld	hl, 269
	push	hl
	ld	hl, L_.str.1
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 1
	push	hl
	ld	hl, 304
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, (_time)
	ld	de, 2
	push	de
	push	hl
	call	_gfx_PrintUInt
	pop	hl
	pop	hl
	ld	hl, 320
	push	hl
	ld	hl, 9
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_HorizLine_NoClip
	pop	hl
	pop	hl
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_gameOverMenu
_gameOverMenu:
	ld	hl, 12
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	hl, 2
	push	hl
	push	hl
	call	_gfx_SetTextScale
	pop	hl
	pop	hl
	ld	hl, 12
	push	hl
	call	_gfx_SetTextBGColor
	pop	hl
	ld	hl, 1
	push	hl
	push	hl
	ld	hl, L_.str.2
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 50
	push	hl
	ld	hl, 20
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, 16
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, L_.str.3
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	a, (_player+4)
	or	a, a
	sbc	hl, hl
	ld	l, a
	ld	de, 3
	push	de
	push	hl
	call	_gfx_PrintInt
	pop	hl
	pop	hl
	ld	hl, 1
	push	hl
	push	hl
	call	_gfx_SetTextScale
	pop	hl
	pop	hl
	ld	hl, 40
	push	hl
	ld	hl, 30
	push	hl
	ld	hl, L_.str.4
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 50
	push	hl
	ld	hl, 30
	push	hl
	ld	hl, L_.str.5
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	jp	_gfx_SwapDraw
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_collision
_collision:
	ld	iy, _player
	ld	e, (iy)
	ld	d, (iy + 1)
	ld.sis	bc, 302
	ld	l, e
	ld	h, d
	or	a, a
	sbc.sis	hl, bc
	jq	c, BB6_2
	ld.sis	de, 302
	jq	BB6_4
BB6_2:
	ld.sis	bc, 3
	ld	l, e
	ld	h, d
	or	a, a
	sbc.sis	hl, bc
	jq	nc, BB6_5
	ld.sis	de, 2
BB6_4:
	ld	(iy), e
	ld	(iy + 1), d
BB6_5:
	ld	hl, _COIN
	ld	a, (_player+2)
	cp	a, 13
	jq	nc, BB6_7
	ld	a, 12
	jq	BB6_9
BB6_7:
	cp	a, -34
	jq	c, BB6_10
	ld	a, -34
BB6_9:
	ld	(_player+2), a
BB6_10:
	ld	c, (hl)
	inc	hl
	ld	b, (hl)
	ld	l, e
	ld	h, d
	or	a, a
	sbc.sis	hl, bc
	ld	c, l
	ld	b, h
	ld	de, 0
	push	de
	pop	hl
	ld	l, a
	ld	a, (_COIN+2)
	ld	e, a
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	ld	a, b
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ld	l, c
	push	hl
	pop	bc
	call	__imulu
	push	hl
	pop	iy
	push	de
	pop	hl
	push	de
	pop	bc
	call	__imulu
	lea	de, iy + 0
	add	hl, de
	push	hl
	pop	bc
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	a, l
	call	__ltof
	ld	l, a
	push	hl
	push	bc
	call	_sqrt
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	pop	hl
	call	__ftol
	ld.sis	de, 17
	ld	l, c
	ld	h, b
	or	a, a
	sbc.sis	hl, de
	jq	nc, BB6_12
	ld	hl, _player+4
	inc	(hl)
	call	_random
	ld	bc, 305
	call	__iremu
	ld	iy, _COIN
	ld	(iy), l
	ld	(iy + 1), h
	call	_random
	ld	bc, 215
	call	__iremu
	ld	a, l
	add	a, 10
	ld	(_COIN+2), a
BB6_12:
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
BB7_1:
	call	_setup
BB7_2:
	ld	hl, -917504
	push	hl
	call	_atomic_load_32
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	ld	l, 15
	call	__lshru
	ld	(_time), bc
	call	_scanKeys
	call	_collision
	call	_drawSprites
	call	_drawStatusBar
	ld	hl, (_time)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB7_6
	call	_gameOverMenu
BB7_4:
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	6, a
	jq	nz, BB7_6
	call	_kb_Scan
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	5, a
	jq	z, BB7_4
	jq	BB7_1
BB7_6:
	call	_gfx_SwapDraw
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	6, a
	jq	z, BB7_2
BB7_8:
	call	_os_GetCSC
	or	a, a
	jq	z, BB7_8
	call	_gfx_End
	or	a, a
	sbc	hl, hl
	ret
	section	.text,"ax",@progbits

	section	.bss,"aw",@nobits
	public	_player
_player:
	rb	5

	section	.bss,"aw",@nobits
	public	_COIN
_COIN:
	rb	3

	section	.rodata,"a",@progbits
	private	L_.str
L_.str:
	db	"Coins: ",000o

	section	.rodata,"a",@progbits
	private	L_.str.1
L_.str.1:
	db	"Time: ",000o

	section	.bss,"aw",@nobits
	public	_time
_time:
	rb	3

	section	.rodata,"a",@progbits
	private	L_.str.2
L_.str.2:
	db	"Time up!",000o

	section	.rodata,"a",@progbits
	private	L_.str.3
L_.str.3:
	db	"Your Score: ",000o

	section	.rodata,"a",@progbits
	private	L_.str.4
L_.str.4:
	db	"[2nd]: Retry",000o

	section	.rodata,"a",@progbits
	private	L_.str.5
L_.str.5:
	db	"[clear]: Quit",000o

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	_random
	extern	__Unwind_SjLj_Register
	extern	_srand
	extern	_gfx_SetTextBGColor
	extern	_gfx_SetTransparentColor
	extern	_atomic_load_32
	extern	_gfx_SetTextFGColor
	extern	_gfx_Begin
	extern	_kb_Scan
	extern	_gfx_SetPalette
	extern	_coin_data
	extern	_sqrt
	extern	__sand
	extern	_gfx_SwapDraw
	extern	__ftol
	extern	_gfx_PrintInt
	extern	_gfx_SetDraw
	extern	_gfx_FillScreen
	extern	__Unwind_SjLj_Unregister
	extern	_playerU_data
	extern	__iremu
	extern	__imulu
	extern	_gfx_SetColor
	extern	_gfx_PrintUInt
	extern	_playerR_data
	extern	__ltof
	extern	_gfx_PrintStringXY
	extern	_gfx_HorizLine_NoClip
	extern	_os_GetCSC
	extern	_gfx_End
	extern	_gfx_SetTextXY
	extern	_playerD_data
	extern	_gfx_TransparentSprite
	extern	__lshru
	extern	_playerL_data
	extern	_mypalette
	extern	_gfx_SetTextScale
