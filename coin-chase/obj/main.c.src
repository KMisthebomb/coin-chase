	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -24
	call	__frameset
	ld	h, 0
	ld	(ix + -17), l
	ld	(ix + -16), h
BB0_1:
	ld	hl, -851900
	push	hl
	pop	iy
	ld	hl, (iy)
	ld	a, (iy + 3)
	push	hl
	call	_srand
	pop	hl
	call	_random
	ld	bc, 321
	call	__iremu
	ld	(ix + -11), hl
	call	_random
	ld	bc, 231
	call	__iremu
	ld	a, l
	add	a, 10
	ld	(ix + -12), a
	ld	iy, -917456
	ld	l, (iy)
	ld	h, (iy + 1)
	ld.sis	bc, -2
	call	__sand
	ld	(iy), l
	ld	(iy + 1), h
	lea	bc, iy + 0
	ld	hl, 163840
	ld	iy, -917504
	ld	(iy), hl
	ld	l, (ix + -17)
	ld	h, (ix + -16)
	ld	(iy + 3), h
	push	bc
	pop	hl
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	push	bc
	pop	iy
	ld.sis	bc, -520
	call	__sand
	ld.sis	de, 7
	add.sis	hl, de
	ld	(iy), l
	ld	(iy + 1), h
	call	_gfx_Begin
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 26
	push	hl
	ld	hl, _mypalette
	push	hl
	call	_gfx_SetPalette
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTransparentColor
	pop	hl
	ld	hl, 8
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	hl, 2
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, 8
	push	hl
	call	_gfx_SetTextBGColor
	pop	hl
	ld	hl, 1
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	a, 1
	ld	(ix + -5), a
	ld.sis	hl, 50
	ld	(ix + -2), l
	ld	(ix + -1), h
	ld	(ix + -4), l
	ld	(ix + -3), h
	ld.sis	hl, 0
	ld	(ix + -19), l
	ld	(ix + -18), h
BB0_2:
	call	_kb_Scan
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	(ix + -8), l
	ld	(ix + -7), h
	ld	hl, -917504
	push	hl
	call	_atomic_load_32
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	ld	l, 15
	call	__lshru
	ld	(ix + -15), bc
	ld	l, (ix + -8)
	ld	h, (ix + -7)
	ld.sis	bc, 255
	call	__sand
	ld	e, l
	ld	d, h
	ld	a, e
	bit	3, a
	ld	iyl, 1
	ld	a, iyl
	jq	z, BB0_4
	ld	a, 0
BB0_4:
	ld	l, (ix + -2)
	ld	h, (ix + -1)
	ld.sis	bc, -2
	add.sis	hl, bc
	bit	0, a
	jq	nz, BB0_6
	ld	c, 3
	ld	(ix + -5), c
BB0_6:
	bit	0, a
	jq	nz, BB0_8
	ld	(ix + -2), l
	ld	(ix + -1), h
BB0_8:
	ld	l, e
	ld	h, d
	ld.sis	bc, 1
	call	__sand
	ld	a, l
	ld	l, 1
	xor	a, l
	ld	l, (ix + -2)
	ld	h, (ix + -1)
	inc.sis	bc
	add.sis	hl, bc
	bit	0, a
	jq	nz, BB0_10
	ld	c, 4
	ld	(ix + -5), c
BB0_10:
	bit	0, a
	jq	nz, BB0_12
	ld	(ix + -2), l
	ld	(ix + -1), h
BB0_12:
	ld	a, e
	bit	1, a
	ld	a, iyl
	jq	z, BB0_14
	ld	a, 0
BB0_14:
	ld	l, (ix + -4)
	ld	h, (ix + -3)
	ld.sis	bc, -2
	add.sis	hl, bc
	bit	0, a
	jq	nz, BB0_16
	ld	c, 2
	ld	(ix + -5), c
BB0_16:
	bit	0, a
	jq	nz, BB0_18
	ld	(ix + -4), l
	ld	(ix + -3), h
BB0_18:
	ld	a, e
	bit	2, a
	ld	a, iyl
	jq	z, BB0_20
	ld	a, 0
BB0_20:
	ld	l, (ix + -4)
	ld	h, (ix + -3)
	ld.sis	de, 2
	add.sis	hl, de
	bit	0, a
	jq	nz, BB0_22
	ld	e, 1
	ld	(ix + -5), e
BB0_22:
	bit	0, a
	jq	nz, BB0_24
	ld	(ix + -4), l
	ld	(ix + -3), h
BB0_24:
	ld	e, (ix + -4)
	ld	d, (ix + -3)
	ld	a, d
	ld	(ix + -23), a
	rlc	a
	sbc	hl, hl
	ld	(ix + -22), hl
	ld	l, e
	ld	h, d
	ld	de, (ix + -11)
	or	a, a
	sbc.sis	hl, de
	ex	de, hl
	ld	iyl, e
	ld	iyh, d
	ex	de, hl
	ld	c, (ix + -2)
	ld	b, (ix + -1)
	ld	a, b
	ld	(ix + -24), a
	rlc	a
	sbc	hl, hl
	ld	(ix + -8), hl
	ld	e, (ix + -17)
	ld	d, (ix + -16)
	ld	a, (ix + -12)
	ld	e, a
	ld	l, c
	ld	h, b
	ld	(ix + -17), e
	ld	(ix + -16), d
	or	a, a
	sbc.sis	hl, de
	ld	e, l
	ld	d, h
	ld	a, iyh
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ex	de, hl
	ld	e, iyl
	ex	de, hl
	push	hl
	pop	bc
	call	__imulu
	push	hl
	pop	iy
	ld	a, d
	ld	l, a
	rlc	l
	sbc	hl, hl
	ld	h, a
	ld	l, e
	push	hl
	pop	bc
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	lea	hl, iy + 0
	lea	bc, iy + 0
	add	iy, iy
	sbc	hl, hl
	ld	a, l
	call	__ltof
	ld	l, a
	push	hl
	push	bc
	call	_sqrt
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	pop	hl
	call	__ftol
	ld	l, c
	ld	h, b
	ld.sis	de, 17
	or	a, a
	sbc.sis	hl, de
	jq	nc, BB0_40
	ld	l, (ix + -19)
	ld	h, (ix + -18)
	inc.sis	hl
	ld	(ix + -19), l
	ld	(ix + -18), h
	call	_random
	ld	bc, 305
	call	__iremu
	ld	(ix + -11), hl
	call	_random
	ld	bc, 215
	call	__iremu
	ld	a, l
	add	a, 10
	ld	(ix + -12), a
	jq	BB0_26
BB0_40:
BB0_26:
	ld	hl, 8
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	a, (ix + -5)
	sub	a, 1
	cp	a, 4
	jq	nc, BB0_32
	ld	bc, (ix + -22)
	ld	l, (ix + -23)
	ld	b, l
	ld	de, (ix + -8)
	ld	l, (ix + -24)
	ld	d, l
	ld	l, (ix + -4)
	ld	h, (ix + -3)
	ld	c, l
	ld	l, (ix + -2)
	ld	h, (ix + -1)
	ld	e, l
	ld	(ix + -8), de
	ld	de, 0
	ld	e, a
	ld	hl, LJTI0_0
	add	hl, de
	add	hl, de
	add	hl, de
	ld	iy, (hl)
	ld	hl, _playerR_data
	jp	(iy)
BB0_28:
	ld	hl, _playerL_data
	jq	BB0_31
BB0_29:
	ld	hl, _playerU_data
	jq	BB0_31
BB0_30:
	ld	hl, _playerD_data
BB0_31:
	ld	de, (ix + -8)
	push	de
	push	bc
	push	hl
	call	_gfx_TransparentSprite
	pop	hl
	pop	hl
	pop	hl
BB0_32:
	or	a, a
	sbc	hl, hl
	ld	de, (ix + -11)
	ld	l, e
	ld	h, d
	ld	de, 0
	ld	a, (ix + -12)
	ld	e, a
	ld	(ix + -8), de
	push	de
	push	hl
	ld	hl, _coin_data
	push	hl
	call	_gfx_TransparentSprite
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 1
	push	hl
	push	hl
	call	_gfx_SetTextScale
	pop	hl
	pop	hl
	ld	hl, 1
	push	hl
	push	hl
	ld	hl, L_.str
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 1
	push	hl
	ld	hl, 44
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	l, (ix + -19)
	ld	h, (ix + -18)
	ld	de, (ix + -8)
	ld	e, l
	ld	d, h
	ld	hl, 3
	push	hl
	ld	(ix + -8), de
	push	de
	call	_gfx_PrintInt
	pop	hl
	pop	hl
	ld	hl, 1
	push	hl
	ld	hl, 269
	push	hl
	ld	hl, L_.str.1
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 1
	push	hl
	ld	hl, 304
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, 2
	push	hl
	ld	hl, (ix + -15)
	push	hl
	call	_gfx_PrintUInt
	pop	hl
	pop	hl
	ld	hl, 320
	push	hl
	ld	hl, 9
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_HorizLine_NoClip
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + -15)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB0_36
	ld	hl, 12
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	hl, 2
	push	hl
	push	hl
	call	_gfx_SetTextScale
	pop	hl
	pop	hl
	ld	hl, 12
	push	hl
	call	_gfx_SetTextBGColor
	pop	hl
	ld	hl, 1
	push	hl
	push	hl
	ld	hl, L_.str.2
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 50
	push	hl
	ld	hl, 20
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, 16
	push	hl
	ld	hl, 1
	push	hl
	ld	hl, L_.str.3
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 3
	push	hl
	ld	hl, (ix + -8)
	push	hl
	call	_gfx_PrintInt
	pop	hl
	pop	hl
	ld	hl, 1
	push	hl
	push	hl
	call	_gfx_SetTextScale
	pop	hl
	pop	hl
	ld	hl, 40
	push	hl
	ld	hl, 30
	push	hl
	ld	hl, L_.str.4
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 50
	push	hl
	ld	hl, 30
	push	hl
	ld	hl, L_.str.5
	push	hl
	call	_gfx_PrintStringXY
	pop	hl
	pop	hl
	pop	hl
	call	_gfx_SwapDraw
BB0_34:
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	6, a
	jq	nz, BB0_36
	call	_kb_Scan
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	5, a
	jq	z, BB0_34
	jq	BB0_1
BB0_36:
	call	_gfx_SwapDraw
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	6, a
	jq	z, BB0_2
BB0_38:
	call	_os_GetCSC
	or	a, a
	jq	z, BB0_38
	call	_gfx_End
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
lJTI0_0:
	private	LJTI0_0
LJTI0_0:
	dl	BB0_31
	dl	BB0_28
	dl	BB0_29
	dl	BB0_30

	section	.rodata,"a",@progbits
	private	L_.str
L_.str:
	db	"Coins: ",000o

	section	.rodata,"a",@progbits
	private	L_.str.1
L_.str.1:
	db	"Time: ",000o

	section	.rodata,"a",@progbits
	private	L_.str.2
L_.str.2:
	db	"Time up!",000o

	section	.rodata,"a",@progbits
	private	L_.str.3
L_.str.3:
	db	"Your Score: ",000o

	section	.rodata,"a",@progbits
	private	L_.str.4
L_.str.4:
	db	"[2nd]: Retry",000o

	section	.rodata,"a",@progbits
	private	L_.str.5
L_.str.5:
	db	"[clear]: Quit",000o

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	_random
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_srand
	extern	_gfx_SetTextBGColor
	extern	_gfx_SetTransparentColor
	extern	_atomic_load_32
	extern	_gfx_SetTextFGColor
	extern	_gfx_Begin
	extern	_kb_Scan
	extern	_gfx_SetPalette
	extern	_coin_data
	extern	_sqrt
	extern	__sand
	extern	_gfx_SwapDraw
	extern	__ftol
	extern	_gfx_PrintInt
	extern	_gfx_SetDraw
	extern	_gfx_FillScreen
	extern	__Unwind_SjLj_Unregister
	extern	_playerU_data
	extern	__iremu
	extern	__imulu
	extern	_gfx_SetColor
	extern	_gfx_PrintUInt
	extern	_playerR_data
	extern	__ltof
	extern	_gfx_HorizLine_NoClip
	extern	_gfx_PrintStringXY
	extern	_os_GetCSC
	extern	_gfx_SetTextXY
	extern	__lshru
	extern	_gfx_TransparentSprite
	extern	_playerD_data
	extern	_playerL_data
	extern	_mypalette
	extern	_gfx_End
	extern	_gfx_SetTextScale
